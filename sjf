#include <stdio.h>

void sortByBurstTime(int bt[], int n) {
    for (int i = 0; i < n - 1; i++) {
        for (int j = i + 1; j < n; j++) {
            if (bt[i] > bt[j]) {
                
                int temp = bt[i];
                bt[i] = bt[j];
                bt[j] = temp;
            }
        }
    }
}

void findWaitingTime(int bt[], int n, int wt[]) {
    wt[0] = 0;  
    for (int i = 1; i < n; i++) {
        wt[i] = bt[i - 1] + wt[i - 1];  
    }
}

void findTurnaroundTime(int bt[], int wt[], int n, int tat[]) {
    for (int i = 0; i < n; i++) {
        tat[i] = bt[i] + wt[i];  
    }
}

void findAverageTime(int bt[], int n) {
    int wt[n], tat[n];
    findWaitingTime(bt, n, wt);
    findTurnaroundTime(bt, wt, n, tat);

    int total_wt = 0, total_tat = 0;
    printf("Process\tBurst Time\tWaiting Time\tTurnaround Time\n");
    for (int i = 0; i < n; i++) {
        total_wt += wt[i];
        total_tat += tat[i];
        printf("%d\t\t%d\t\t%d\t\t%d\n", i + 1, bt[i], wt[i], tat[i]);
    }
   
    printf("Average Waiting Time = %.2f\n", (float)total_wt / n);
    printf("Average Turnaround Time = %.2f\n", (float)total_tat / n);
}

int main() {
    int n;
    printf("Enter the number of processes: ");
    scanf("%d", &n);
   
    int bt[n];
    printf("Enter burst times for each process:\n");
    for (int i = 0; i < n; i++) {
        printf("Burst time for Process %d: ", i + 1);
        scanf("%d", &bt[i]);
    }
   
    
    sortByBurstTime(bt, n);
   
    findAverageTime(bt, n);
   
    return 0;
}
